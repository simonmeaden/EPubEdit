cmake_minimum_required(VERSION 3.22.2.0)
set(CMAKE_MODULE_PATH "/home/simonmeaden/workspace/epubedit/cmake;/usr/lib64/cmake/Qt6;/usr/lib64/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;/usr/lib64/cmake/Qt6/3rdparty/kwin;/usr/lib64/cmake/Qt6;/usr/lib64/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;/usr/lib64/cmake/Qt6/3rdparty/kwin;/usr/lib64/cmake/Qt6;/usr/lib64/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;/usr/lib64/cmake/Qt6/3rdparty/kwin")
project(CMAKE_TRY_COMPILE CXX)
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_CXX_FLAGS "")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_EXE_LINKER_FLAGS "-L/usr/local/opt/openssl/lib")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[-DHAVE_STDATOMIC]==])
cmake_policy(SET CMP0065 NEW)
cmake_policy(SET CMP0083 NEW)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/home/simonmeaden/workspace/epubedit/build/5_clang/release/CMakeFiles/CMakeTmp")
add_executable(cmTC_7d11d "/home/simonmeaden/workspace/epubedit/build/5_clang/release/CMakeFiles/CMakeTmp/src.cxx")
set_property(TARGET cmTC_7d11d PROPERTY "CXX_STANDARD" "17")
set_property(TARGET cmTC_7d11d PROPERTY "CXX_STANDARD_REQUIRED" "ON")
target_link_libraries(cmTC_7d11d ${LINK_LIBRARIES})
